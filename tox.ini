[tox]
envlist = py39, py310, py311, py312, lint, docs
isolated_build = True
skip_missing_interpreters = True
requires =
    tox>=4.0
    setuptools>=65.0
    pip>=23.0
    wheel

[testenv]
setenv =
    PYTHONPATH = {toxinidir}/src
    SVF_MOCK_MODE = 1
    MPLBACKEND = Agg
deps =
    -r requirements.txt
    pytest>=7.1.1
    pytest-cov>=5.0
    ruff>=0.4.2
    psutil>=5.9.0
commands =
    ruff check src tests
    pytest --cov=src --cov-report=term-missing --cov-report=xml --ignore=tests/legacy --ignore=tests/integration --ignore=tests/performance --ignore=tests/test_jupyter_dashboard.py {posargs:tests}

[testenv:lint]
deps = 
    ruff>=0.4.2
    mypy>=1.8.0
commands =
    ruff check src tests
    ruff format --check src tests
    mypy src

[testenv:format]
deps = 
    ruff>=0.4.2
commands =
    ruff format src tests
    ruff check --fix src tests

[testenv:docs]
deps =
    -r requirements.txt
    sphinx>=4.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=0.18.1
    sphinx-markdown-tables
    sphinx-design
    sphinx-copybutton
    sphinx-autobuild
    linkify-it-py
    sphinxcontrib-mermaid
commands =
    sphinx-build -b html docs docs/_build/html

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:core]
# Test only core functionality, excluding legacy and problematic tests
setenv =
    PYTHONPATH = {toxinidir}/src
    SVF_MOCK_MODE = 1
    MPLBACKEND = Agg
deps =
    -r requirements.txt
    pytest>=7.1.1
    pytest-cov>=5.0
    psutil>=5.9.0
commands =
    pytest --cov=src --cov-report=term-missing --ignore=tests/legacy --ignore=tests/performance --ignore=tests/integration --ignore=tests/test_jupyter_dashboard.py tests/

[testenv:integration]
# Test integration tests separately with timeout
setenv =
    PYTHONPATH = {toxinidir}/src
    SVF_MOCK_MODE = 1
    MPLBACKEND = Agg
deps =
    -r requirements.txt
    pytest>=7.1.1
    pytest-cov>=5.0
    pytest-timeout>=2.1.0
    psutil>=5.9.0
commands =
    pytest tests/integration/ -v --timeout=60

[testenv:performance]
# Test performance tests separately
setenv =
    PYTHONPATH = {toxinidir}/src
    SVF_MOCK_MODE = 1
    MPLBACKEND = Agg
deps =
    -r requirements.txt
    pytest>=7.1.1
    pytest-cov>=5.0
    psutil>=5.9.0
commands =
    pytest tests/performance/ -v

[testenv:api]
# Test API functionality specifically
setenv =
    PYTHONPATH = {toxinidir}/src
    SVF_MOCK_MODE = 1
    MPLBACKEND = Agg
deps =
    -r requirements.txt
    pytest>=7.1.1
    pytest-cov>=5.0
    psutil>=5.9.0
commands =
    pytest tests/test_api.py tests/test_basic_imports.py -v --tb=short

[coverage:run]
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

# Ruff configuration moved to pyproject.toml