[build-system]
requires = ["setuptools>=65.0", "wheel", "setuptools_scm>=7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "serdes-validation-framework"
version = "1.3.0"
description = "A comprehensive framework for validating high-speed SerDes protocols with PCIe 6.0 support and NRZ/PAM4 dual-mode capabilities."
authors = [
    {name = "Mudit Bhargava", email = "muditbhargava666@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}
keywords = [
    "SerDes",
    "PCIe",
    "PCIe-6.0",
    "NRZ",
    "PAM4",
    "high-speed",
    "validation",
    "compliance-testing",
    "link-training",
    "equalization",
    "eye-diagram",
    "data-collection",
    "data-analysis",
    "instrument-control",
    "GPIB",
    "automation"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Topic :: System :: Hardware :: Hardware Drivers"
]
dependencies = [
    "numpy>=1.26.0",
    "scipy>=1.13.1,<2.0.0",
    "pandas>=2.2.3",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
    "scikit-learn>=1.4.0",
    "pyvisa>=1.13.0",
    "pyvisa-py>=0.5.1",
    "pyusb>=1.2.1",
    "python-usbtmc>=0.8",
    "gpib-ctypes @ git+https://github.com/tivek/gpib_ctypes",
    "zeroconf>=0.131.0"
]

[project.urls]
"Homepage" = "https://github.com/muditbhargava66/serdes-validation-framework"
"Documentation" = "https://serdes-validation-framework.readthedocs.io/"
"Source" = "https://github.com/muditbhargava66/serdes-validation-framework"
"Tracker" = "https://github.com/muditbhargava66/serdes-validation-framework/issues"

[project.optional-dependencies]
dev = [
  "pytest>=7.1.1",
  "pytest-cov>=5.0",
  "tox>=4.0",
  "pre-commit>=3.0",
  "black>=24.0",
  "mypy>=1.8.0",
  "ruff>=0.4.2",
  "uv>=0.1.0"
]
docs = [
  "sphinx>=4.0.0",
  "sphinx-rtd-theme>=1.0.0",
  "myst-parser>=0.18.1",
  "sphinx-markdown-tables",
  "sphinx-design",
  "sphinx-copybutton",
  "sphinx-autobuild"
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7.1"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 130

[tool.isort]
profile = "black"
line_length = 130

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 130
target-version = "py310"
exclude = [
    ".git",
    "__pycache__",
    "venv",
    "env",
    ".venv",
    ".env",
    "build",
    "dist"
]

[tool.ruff.lint]
ignore = ["W293", "W291", "F841", "N803", "N806", "B904", "B017", "C901"]
# Extend select rules
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "B",    # flake8-bugbear
]